#!/usr/bin/env python
#=======================================================================
#	$Id$
#	Various actions on IMAP folders
#=======================================================================
import sys
import ptimap
import argparse
import ConfigParser
import os.path
import time
import logging

def die(msg,code=1):
    print >>sys.stderr, msg
    sys.exit(code)

ap = argparse.ArgumentParser()
ap.add_argument('-v','--verbose', action='store_true',
                help='Show progress')
ap.add_argument('-d','--debug', action='store_true',
                help='Low-level tracing')
ap.add_argument('account',
                help='Account name in ~/.imap')
ap.add_argument('action',
                help='Action to perform (login,capabilities,folders,select,delete-older)')
ap.add_argument('arg', nargs='*',
                help='Arguments specific to action')
args = ap.parse_args()
if args.debug:
    logging.basicConfig(level=logging.DEBUG)
elif args.verbose:
    logging.basicConfig(level=logging.INFO)

rc = '~/.imap'
acct, action = args.account, args.action
try:
    account = ptimap.Account.from_file(rc, acct)
except ConfigParser.NoSectionError:
    print dir(ap)
    die("%s: No such account '%s' in %s" % (ap.prog, acct, rc))

account.login()

if action=='login':
    pass
elif action=='capabilities':
    print account._imap.capabilities
elif action=='namespace':
    ns = account.namespace()
    print ns
elif action=='folders':
    if len(args.arg) > 0:
        lst = account.folders(args.arg[0])
    else:
        lst = account.folders()
    for f in lst:
        print f

elif action=='select':
    folder = args.arg[0]
    nmsgs = account.select(folder)
    print "%d message(s) in %s" % (nmsgs, folder)

elif action in ('older','delete-older'):
    if len(args.arg) != 2:
        die("Usage: %s account older folder days" % ap.prog)
    folder, days = args.arg
    account.select(folder)
    date = time.localtime(time.time() - int(days) * 86400)
#        sdate = imaplib.Time2Internaldate(date)
#        print 'sdate:',sdate
#        lst = account.search('SEEN','UNDELETED',
#                             'BEFORE',sdate)
    sdate = time.strftime('%e-%b-%Y', date)
    lst = account.search('SEEN','UNDELETED',
                             '(BEFORE %s)' % sdate)
    if action=='older':
        print lst
    elif action=='delete-older':
        if len(lst):
            todel = lst
                #todel = lst[:100]
            account.copy(todel,cp.get(acct,'trash'))
            account.store(todel,('\\Deleted',))
            print "Deleted %s message%s from %s" % (
                len(lst), len(lst)==1 and '' or 's', folder)

else:
    die("Unknown action '%s'" % action)
